[general]
; mode = {copy-only, create-mbr}
mode = create-mbr
; partition numbers,
; notice that logical partitions start with number 5
partitions = 1,2,5
description = 1st is FAT, 2nd is extended, 5th (logical) is for image
; currently unused
copycommand =
copycommand_params =
; script (from the scripts dir)
; executed after MBR creation
; device file name from /dev passed as the 1st argument
postscript = postmbr.sh

; partition 1 definition
[partition_1]
; start in bytes
; adjusted automatically for a proper alignment
start = 0
; size in bytes
; adjusted automatically for a proper alignment
size = 30000000
; type declared in MBR
type = 0x0B
; filesystem to create
fstype = vfat
; label, leave empty for no label
label = LE_PARTITION
; boot flag set in MBR
boot = true
; script (from the scripts dir)
; executed after data copying
; mountpoint passed as the 1st argument
postscript =
; files to be copied have to be in a directory called "1"
; rsync (--delete) is used for copying

[partition_2]
; type 0x05 means extended partition
type = 0x05
; it starts where the previous partition ends
; it will be automatically adjusted if too small
; adjusted automatically for a proper alignment as well
start = 40000000
; should be sufficient for following logical partition to fit in
; adjusted automatically to end at the last logical partition's end
; adjusted automatically for a proper alignment as well
size = 140000000
fstype =
label =
boot = false
postscript =

[partition_5]
; adjusted automatically for a proper alignment
start = 40000000
; adjusted automatically for a proper alignment
size = 140000000
; 0xDA stands for non-fs data
type = 0xDA
; special fstype == "image" means to process the partition
; but omit filesystem creation
fstype = image
label =
boot = false
postscript =
; image file has to be named "5"
; dd is used for copying the image
